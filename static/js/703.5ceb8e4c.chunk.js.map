{"version":3,"file":"static/js/703.5ceb8e4c.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","fetchMovies.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0px 5px;\n\n  @media screen and (min-width: 320px) {\n    width: 300px;\n    padding: 0 10px;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: 460px;\n    padding: 0 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 728px;\n    padding: 0 20px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1140px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieLi = styled.li`\n  position: relative;\n  overflow: hidden;\n  z-index: 0;\n  border-radius: 6px;\n  @media screen and (max-width: 767px) {\n    flex-basis: calc((100% - 5px) / 2);\n    padding: 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 10px) / 3);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 20px) / 5);\n  }\n`;\n\nexport const MovieItem = styled(NavLink)`\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n    color: #3f51b5;\n  }\n  &.active {\n    color: #3f51b5;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 5px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Overlay = styled.div`\n  display: inline-block;\n  position: absolute;\n  z-index: 0;\n\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transform: translateY(100%);\n  transition: transform 250ms ease-in-out;\n\n  padding: 20px 10px;\n\n  background: #3f51b5ca;\n  color: white;\n\n  @media screen and (min-width: 1200px) {\n    padding: 40px 20px;\n  }\n\n  li:hover & {\n    transform: translateY(0);\n  }\n`;\n\nexport const Overview = styled.p`\n  width: 130px;\n  font-size: 10px;\n  line-height: 1.56;\n  letter-spacing: 0.03em;\n\n  @media screen and (min-width: 320px) {\n    width: 130px;\n  }\n  @media screen and (min-width: 480px) {\n    width: 220px;\n    font-size: 15px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    font-size: 15px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 13px;\n  }\n`;\n\nexport const Title = styled.h3`\n  width: 130px;\n  margin: 0 0 10px 0;\n  font-size: 13px;\n  line-height: 1.56;\n  letter-spacing: 0.03em;\n  text-align: center;\n\n  @media screen and (min-width: 320px) {\n    width: 130px;\n  }\n  @media screen and (min-width: 480px) {\n    width: 220px;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieImage,\n  MovieItem,\n  MovieLi,\n  MovieList,\n  Overlay,\n  Overview,\n  Title,\n} from './MovieGallery.styled';\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  const renderGallery = () =>\n    movies.map(({ id, poster_path, title, overview }) => (\n      <MovieLi key={id}>\n        {poster_path ? (\n          <MovieItem\n            to={`/movies/${id}`}\n            state={{ from: `${location.pathname}${location.search}` }}\n          >\n            <MovieImage\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <Overlay>\n              <Title>{title}</Title>\n              <Overview>{overview}</Overview>\n            </Overlay>\n          </MovieItem>\n        ) : (\n          <MovieItem\n            to={`/movies/${id}`}\n            state={{ from: `${location.pathname}${location.search}` }}\n          >\n            <MovieImage\n              src=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg\"\n              alt={title}\n            />\n            <p>{title}</p>\n          </MovieItem>\n        )}\n      </MovieLi>\n    ));\n\n  return <MovieList>{movies ? renderGallery() : null}</MovieList>;\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '332ebb0c59493b862a9beffecc6f1777';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${KEY}`\n  );\n  console.log(response.data.results);\n  return response.data;\n};\n\nexport const fetchSearchMovie = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 0 24px;\n  color: #fff;\n  background-color: #3f51b5;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { IoMdSearch } from 'react-icons/io';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\nimport Notiflix from 'notiflix';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function SearchBar({ onSubmit }) {\n  const [inputName, setInputName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputName.trim() === '') {\n      return Notiflix.Notify.info(\n        'Please, I need to know what you are looking for!',\n        {\n          theme: 'colored',\n        }\n      );\n    }\n    onSubmit(inputName);\n    setInputName('');\n  };\n\n  const handleChange = e => {\n    setInputName(e.target.value.toLowerCase());\n  };\n\n  return (\n    <SearchBarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <IoMdSearch style={{ width: 30, height: 30 }} />\n          <SearchFormLabel>Search</SearchFormLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n          onChange={handleChange}\n          name=\"inputName\"\n          value={inputName}\n        />\n      </SearchForm>\n    </SearchBarHeader>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchSearchMovie } from 'fetchMovies';\nimport Notiflix from 'notiflix';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Container } from 'components/App.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const movieName = searchParams.get('name') ?? '';\n\n  const onSubmit = value => {\n    setSearchParams({ name: `${value}` });\n  };\n\n  useEffect(() => {\n    const searchFilm = async movieName => {\n      setIsLoading(true);\n      try {\n        const response = await fetchSearchMovie(movieName);\n        setMovies(response.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieName !== '') {\n      searchFilm(movieName);\n    }\n  }, [movieName]);\n\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      <Container>\n        {error &&\n          Notiflix.Notify.failure(\n            `Sorry, but something happened wrong: ${error.message}`,\n            {\n              theme: 'colored',\n            }\n          )}\n\n        <MovieGallery movies={movies} />\n        {isLoading && <Loader />}\n      </Container>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","MovieLi","MovieItem","NavLink","MovieImage","MovieList","Overlay","Overview","Title","MovieGallery","movies","location","useLocation","map","id","poster_path","title","overview","to","state","from","pathname","search","src","alt","BASE_URL","KEY","fetchTrending","axios","response","console","log","data","results","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","SearchBarHeader","SearchForm","SearchFormButton","SearchFormLabel","SearchFormInput","SearchBar","onSubmit","useState","inputName","setInputName","e","preventDefault","trim","Notiflix","theme","type","style","width","height","autocomplete","autoFocus","placeholder","onChange","target","value","toLowerCase","name","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","isLoading","setIsLoading","movieName","get","useEffect","searchFilm","message","Loader"],"sourceRoot":""}