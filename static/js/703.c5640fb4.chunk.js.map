{"version":3,"file":"static/js/703.c5640fb4.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","fetchMovies.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled(NavLink)`\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n    color: #3f51b5;\n  }\n  &.active {\n    color: #3f51b5;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieItem, MovieList } from './MovieGallery.styled';\n\nexport const MovieGallery = ({ movies }) => {\n  const renderGallery = () =>\n    movies.map(({ id, title }) => (\n      <li key={id}>\n        <MovieItem to={`/movies/${id}`}>{title}</MovieItem>\n      </li>\n    ));\n\n  return <MovieList>{movies ? renderGallery() : null}</MovieList>;\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '332ebb0c59493b862a9beffecc6f1777';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { IoMdSearch } from 'react-icons/io';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function SearchBar({ onSubmit }) {\n  const [inputName, setInputName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputName.trim() === '') {\n      return toast.warning('Please, I need to know what you are looking for!', {\n        theme: 'colored',\n      });\n    }\n    onSubmit(inputName);\n    setInputName('');\n  };\n\n  const handleChange = e => {\n    setInputName(e.target.value.toLowerCase());\n  };\n\n  return (\n    <SearchBarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <IoMdSearch style={{ width: 30, height: 30 }} />\n          <SearchFormLabel>Search</SearchFormLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n          onChange={handleChange}\n          name=\"inputName\"\n          value={inputName}\n        />\n      </SearchForm>\n    </SearchBarHeader>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchSearchMovie } from 'fetchMovies';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const movieName = searchParams.get('name') ?? '';\n\n  const onSubmit = value => {\n    setSearchParams({ name: `${value}` });\n  };\n\n  useEffect(() => {\n    const searchFilm = async movieName => {\n      setIsLoading(true);\n      try {\n        const response = await fetchSearchMovie(movieName);\n        setMovies(response.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieName !== '') {\n      searchFilm(movieName);\n    }\n  }, [movieName]);\n\n  return (\n    <>\n      {error &&\n        toast.error(`Sorry, but something happened wrong: ${error.message}`, {\n          theme: 'colored',\n        })}\n      <SearchBar onSubmit={onSubmit} />\n      <MovieGallery movies={movies} />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieItem","styled","NavLink","MovieList","MovieGallery","movies","map","id","title","to","BASE_URL","KEY","fetchTrending","axios","response","data","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","SearchBarHeader","SearchForm","SearchFormButton","SearchFormLabel","SearchFormInput","SearchBar","onSubmit","useState","inputName","setInputName","e","preventDefault","trim","toast","theme","type","style","width","height","autocomplete","autoFocus","placeholder","onChange","target","value","toLowerCase","name","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","isLoading","setIsLoading","movieName","get","useEffect","searchFilm","results","message","Loader"],"sourceRoot":""}