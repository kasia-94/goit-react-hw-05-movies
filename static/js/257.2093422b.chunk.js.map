{"version":3,"file":"static/js/257.2093422b.chunk.js","mappings":"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","sources":["fetchMovies.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '332ebb0c59493b862a9beffecc6f1777';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n","import styled from '@emotion/styled';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MainContainer = styled.div`\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  height: 100%;\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n\nexport const Addition = styled.ul`\n  list-style: none;\n`;\n\nexport const AdditionLink = styled(NavLink)`\n  font-weight: 500;\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n  transition: 250ms color ease;\n\n  :hover,\n  :focus {\n    color: #14299b;\n  }\n  &.active {\n    color: #14299b;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: 250ms color ease;\n\n  :hover {\n    color: #3f51b5;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'fetchMovies';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from '../../components/Loader/Loader';\nimport {\n  MainContainer,\n  Image,\n  Addition,\n  AdditionLink,\n  StyledLink,\n} from './MovieDetails.styled';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [backLink, setBackLink] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (backLink !== '') {\n      return;\n    }\n    setBackLink(location.state?.from ?? '/Home');\n  }, [backLink, location]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  function getRelizeYear(date) {\n    const year = new Date(date);\n    return year.getFullYear();\n  }\n\n  return (\n    <>\n      <StyledLink to={backLink}>\n        <HiArrowLeft size=\"24\" />\n        <span>Go back</span>\n      </StyledLink>\n      {error &&\n        toast.error(`Sorry, but something happened wrong: ${error.message}`, {\n          theme: 'colored',\n        })}\n      {movie && (\n        <div>\n          <MainContainer>\n            {movie.poster_path ? (\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n            ) : (\n              <Image\n                src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png\"\n                alt={movie.title}\n              />\n            )}\n            <div>\n              <h1>\n                {movie.title} ({getRelizeYear(movie.release_date)})\n              </h1>\n              <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h2>Genres</h2>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </MainContainer>\n          <div>\n            <h2>Additional information</h2>\n            <Addition>\n              <li>\n                <AdditionLink to=\"cast\" state={{ id: movieId }}>\n                  Cast\n                </AdditionLink>\n              </li>\n              <li>\n                <AdditionLink to=\"reviews\" state={{ id: movieId }}>\n                  Reviews\n                </AdditionLink>\n              </li>\n            </Addition>\n          </div>\n        </div>\n      )}\n      {isLoading && <Loader />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","KEY","fetchTrending","axios","response","data","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","MainContainer","styled","Image","Addition","AdditionLink","NavLink","StyledLink","Link","date","useState","movie","setMovie","error","setError","isLoading","setIsLoading","backLink","setBackLink","useParams","location","useLocation","useEffect","state","from","controller","AbortController","fetchMovie","message","abort","to","size","toast","theme","poster_path","src","alt","title","release_date","Date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","id","Loader"],"sourceRoot":""}