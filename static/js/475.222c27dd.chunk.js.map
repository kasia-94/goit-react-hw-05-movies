{"version":3,"file":"static/js/475.222c27dd.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAM,mCAECC,EAAa,mCAAG,oGACJC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFjB,cACrBG,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,qDAObC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BM,IAFrB,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAS,EADA,oBACmBR,IAFX,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAiB,mCAAG,WAAMD,GAAN,uFACRN,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAS,EADA,4BAC2BR,IAFnB,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAiB,mCAAG,WAAMF,GAAN,uFACRN,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAS,EADA,4BAC2BR,IAFnB,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD,+LC9BjBO,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,SCAVE,EAAW,SAAC,GAAY,IAAVC,EAAS,EAATA,GACzB,OACE,UAACJ,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaC,KAAK,QAClB,wCAGL,E,UC8ED,EAhFqB,WAAO,IAAD,IA4BFC,EA3BvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QAEFkB,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,SA2B7C,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAU,mCAAG,oGAEfT,GAAa,GAFE,UAGQjB,EAAAA,EAAAA,IAAkBC,GAH1B,OAGTL,EAHS,OAIfiB,EAASjB,GAJM,gDAMfmB,EAAS,KAAMY,SANA,yBAQfV,GAAa,GARE,4EAAH,qDAahB,OADAS,IACO,WACLF,EAAWI,OACZ,CACF,GAAE,CAAC3B,KAQF,iCACE,SAACM,EAAD,CAAUC,GAAIW,IACbL,GACCe,EAAAA,GAAAA,MAAA,+CAAoDf,EAAMa,SAAW,CACnEG,MAAO,YAEVlB,IACC,2BACGA,EAAMmB,aACL,gBACEC,IAAG,yCAAoCpB,EAAMmB,aAC7CE,IAAKrB,EAAMsB,SAGb,gBACEF,IAAI,0EACJC,IAAKrB,EAAMsB,SAGf,0BACGtB,EAAMsB,MADT,MAzBexB,EA0BiBE,EAAMuB,aAzB/B,IAAIC,KAAK1B,GACV2B,eAuBN,QAGA,wCAAgBC,KAAKC,MAA2B,GAArB3B,EAAM4B,cAAjC,QACA,sCACA,uBAAI5B,EAAM6B,YACV,oCACA,uBAAI7B,EAAM8B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAC/C,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMtC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,gCAMTQ,IAAa,SAAC+B,EAAA,EAAD,KACd,SAAC,KAAD,MAGL,C","sources":["fetchMovies.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '332ebb0c59493b862a9beffecc6f1777';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      <span>Go back</span>\n    </StyledLink>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'fetchMovies';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Loader } from '../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movie';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  function getRelizeYear(date) {\n    const year = new Date(date);\n    return year.getFullYear();\n  }\n\n  return (\n    <>\n      <BackLink to={backLinkHref} />\n      {error &&\n        toast.error(`Sorry, but something happened wrong: ${error.message}`, {\n          theme: 'colored',\n        })}\n      {movie && (\n        <div>\n          {movie.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n          ) : (\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png\"\n              alt={movie.title}\n            />\n          )}\n          <h1>\n            {movie.title} ({getRelizeYear(movie.release_date)})\n          </h1>\n          <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n          <div>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      {isLoading && <Loader />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","KEY","fetchTrending","axios","response","data","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","StyledLink","styled","Link","BackLink","to","size","date","useState","movie","setMovie","error","setError","isLoading","setIsLoading","useParams","backLinkHref","useLocation","state","from","useEffect","controller","AbortController","fetchMovie","message","abort","toast","theme","poster_path","src","alt","title","release_date","Date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","Loader"],"sourceRoot":""}